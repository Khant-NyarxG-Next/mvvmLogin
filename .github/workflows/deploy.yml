name: Android CI/CD

on:
  push:
    branches:
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Package APK and create release
        run: |
          VERSION="v$(echo $GITHUB_REF | cut -d/ -f3)_$(date +'%Y%m%d%H%M%S')"
          APK_NAME="app_${VERSION}.apk"
          ./gradlew assembleRelease
          cp app/build/outputs/apk/release/app-release.apk $APK_NAME
          echo "::set-output name=apk_name::$APK_NAME"
        id: package

      - name: Upload Release Asset
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.package.outputs.apk_name }}
          path: .

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download APK
        uses: actions/download-artifact@v2
        with:
          name: ${{ needs.build.outputs.artifacts_name }}

      - name: Upload Test Report
        run: |
          # Add your test commands here, e.g., running tests with Espresso
          # Collect and generate test reports (e.g., index.html)
          echo "Test report content" > index.html
        id: test

      - name: Upload Test Report Artifact
        uses: actions/upload-artifact@v2
        with:
          name: test-report
          path: index.html

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./  # Directory containing index.html and other artifacts
